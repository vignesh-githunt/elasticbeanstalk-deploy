{
  "version": 1,
  "projects": {
    "base-app": {
      "root": "apps/base-app",
      "sourceRoot": "apps/base-app/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/base-app",
            "index": "apps/base-app/src/index.html",
            "main": "apps/base-app/src/main.tsx",
            "polyfills": "apps/base-app/src/polyfills.ts",
            "tsConfig": "apps/base-app/tsconfig.app.json",
            "assets": [
              "apps/base-app/src/favicon.ico",
              "apps/base-app/src/assets"
            ],
            "styles": ["apps/base-app/src/styles.scss"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/base-app/src/environments/environment.ts",
                  "with": "apps/base-app/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "base-app:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "base-app:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/base-app/tsconfig.app.json",
              "apps/base-app/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/base-app/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/base-app/jest.config.js",
            "passWithNoTests": true
          }
        },
        "deploy": {
          "builder": "@netlify-builder/deploy:deploy",
          "options": {
            "outputPath": "dist/apps/base-app",
            "siteId": "8bb1e9f5-b1ce-468d-bd5a-9d4c340f8c63"
          }
        }
      }
    },
    "base-app-e2e": {
      "root": "apps/base-app-e2e",
      "sourceRoot": "apps/base-app-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/base-app-e2e/cypress.json",
            "tsConfig": "apps/base-app-e2e/tsconfig.e2e.json",
            "devServerTarget": "base-app:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "base-app:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/base-app-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/base-app-e2e/**/*"]
          }
        }
      }
    },
    "cadence": {
      "root": "apps/cadence",
      "sourceRoot": "apps/cadence/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": ["npx apps/cadence/build"],
          "options": {
            "command": "node ../../node_modules/.bin/react-app-rewired build",
            "cwd": "apps/cadence",
            "stylePreprocessorOptions": {
              "includePaths": ["libs/styles/src/lib"]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/react-app-rewired start",
            "cwd": "apps/cadence",
            "stylePreprocessorOptions": {
              "includePaths": ["libs/styles/src/lib"]
            }
          }
        },
        "serve-win32": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/react-app-rewired/bin/index.js start",
            "cwd": "apps/cadence",
            "stylePreprocessorOptions": {
              "includePaths": ["libs/styles/src/lib"]
            }
          }
        },
        "lint": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/eslint src/**/*.js src/**/*.tsx src/**/*.ts",
            "cwd": "apps/cadence"
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/react-app-rewired test --watchAll=false",
            "cwd": "apps/cadence"
          }
        }
      }
    },
    "cadence-e2e": {
      "root": "apps/cadence-e2e",
      "sourceRoot": "apps/cadence-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/cadence-e2e/cypress.json",
            "tsConfig": "apps/cadence-e2e/tsconfig.e2e.json",
            "devServerTarget": "cadence:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "cadence:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/cadence-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/cadence-e2e/**/*"]
          }
        }
      }
    },
    "stories": {
      "root": "apps/stories",
      "sourceRoot": "apps/stories/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": ["dist/apps/stories"],
          "options": {
            "command": "node ../../node_modules/.bin/react-app-rewired build",
            "cwd": "apps/stories"
          }
        },
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/react-app-rewired start",
            "cwd": "apps/stories"
          }
        },
        "serve-win32": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/react-app-rewired/bin/index.js start",
            "cwd": "apps/stories"
          }
        },
        "lint": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/eslint src/**/*.tsx src/**/*.ts",
            "cwd": "apps/stories"
          }
        },
        "test": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/react-app-rewired test --watchAll=false",
            "cwd": "apps/stories"
          }
        }
      }
    },
    "stories-e2e": {
      "root": "apps/stories-e2e",
      "sourceRoot": "apps/stories-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/stories-e2e/cypress.json",
            "tsConfig": "apps/stories-e2e/tsconfig.e2e.json",
            "devServerTarget": "stories:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "stories:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/stories-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/stories-e2e/**/*"]
          }
        }
      }
    },
    "dialers": {
      "root": "apps/dialers",
      "sourceRoot": "apps/dialers/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/dialers",
            "index": "apps/dialers/src/index.html",
            "main": "apps/dialers/src/main.tsx",
            "polyfills": "apps/dialers/src/polyfills.ts",
            "tsConfig": "apps/dialers/tsconfig.app.json",
            "assets": [
              "apps/dialers/src/favicon.ico",
              "apps/dialers/src/assets"
            ],
            "styles": ["apps/dialers/src/styles.scss"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/dialers/src/environments/environment.ts",
                  "with": "apps/dialers/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "dialers:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "dialers:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/dialers/tsconfig.app.json",
              "apps/dialers/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/dialers/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/dialers/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "dialers-e2e": {
      "root": "apps/dialers-e2e",
      "sourceRoot": "apps/dialers-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/dialers-e2e/cypress.json",
            "tsConfig": "apps/dialers-e2e/tsconfig.e2e.json",
            "devServerTarget": "dialers:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "dialers:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/dialers-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/dialers-e2e/**/*"]
          }
        }
      }
    },
    "admin": {
      "root": "apps/admin",
      "sourceRoot": "apps/admin/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/admin",
            "index": "apps/admin/src/index.html",
            "main": "apps/admin/src/main.tsx",
            "polyfills": "apps/admin/src/polyfills.ts",
            "tsConfig": "apps/admin/tsconfig.app.json",
            "assets": ["apps/admin/src/favicon.ico", "apps/admin/src/assets"],
            "styles": ["apps/admin/src/styles.scss"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/admin/src/environments/environment.ts",
                  "with": "apps/admin/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "admin:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "admin:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/admin/tsconfig.app.json",
              "apps/admin/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/admin/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/admin/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "admin-e2e": {
      "root": "apps/admin-e2e",
      "sourceRoot": "apps/admin-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/admin-e2e/cypress.json",
            "tsConfig": "apps/admin-e2e/tsconfig.e2e.json",
            "devServerTarget": "admin:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "admin:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/admin-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/admin-e2e/**/*"]
          }
        }
      }
    },
    "shared-components": {
      "root": "libs/shared-components",
      "sourceRoot": "libs/shared-components/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/shared-components/tsconfig.lib.json",
              "libs/shared-components/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared-components/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared-components/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "base-api": {
      "root": "apps/base-api",
      "sourceRoot": "apps/base-api/src",
      "projectType": "application",
      "prefix": "base-server",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/base-api",
            "main": "apps/base-api/src/main.ts",
            "tsConfig": "apps/base-api/tsconfig.app.json",
            "assets": ["apps/base-api/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/base-api/src/environments/environment.ts",
                  "with": "apps/base-api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "base-api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "apps/base-api/tsconfig.app.json",
              "apps/base-api/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/base-api/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/base-api/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "styles": {
      "root": "libs/styles",
      "sourceRoot": "libs/styles/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": [
              "libs/styles/tsconfig.lib.json",
              "libs/styles/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/styles/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/styles/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "xdr": {
      "root": "apps/xdr",
      "sourceRoot": "apps/xdr/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": ["dist/apps/xdr"],
          "options": {
            "command": "NODE_ENV=production node ../../node_modules/.bin/craco build",
            "cwd": "apps/xdr"
          }
        },
        "build-dev": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": ["dist/apps/xdr"],
          "options": {
            "command": "node ../../node_modules/.bin/craco build",
            "cwd": "apps/xdr"
          }
        },
        "serve": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "NODE_ENV=development ../../node_modules/.bin/craco start",
            "cwd": "apps/xdr"
          }
        },
        "lint": {
          "builder": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "command": "node ../../node_modules/.bin/eslint src/**/*.tsx src/**/*.ts",
            "cwd": "apps/xdr"
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/xdr/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "xdr-e2e": {
      "root": "apps/xdr-e2e",
      "sourceRoot": "apps/xdr-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/xdr-e2e/cypress.json",
            "tsConfig": "apps/xdr-e2e/tsconfig.e2e.json",
            "devServerTarget": "xdr:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "xdr:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "tsConfig": ["apps/xdr-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/xdr-e2e/**/*"]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "schematics": {
    "@nrwl/react": {
      "application": {
        "style": "scss",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "scss"
      },
      "library": {
        "style": "scss",
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "base-app"
}
